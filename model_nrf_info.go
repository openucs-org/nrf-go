/*
NRF NFManagement Service

NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.2.0-alpha.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NrfInfo Information of an NRF NF Instance, used in hierarchical NRF deployments
type NrfInfo struct {
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedUdrInfo *map[string]AnyOfUdrInfoobject `json:"servedUdrInfo,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedUdrInfoList *map[string]map[string]AnyOfUdrInfoobject `json:"servedUdrInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedUdmInfo *map[string]AnyOfUdmInfoobject `json:"servedUdmInfo,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedUdmInfoList *map[string]map[string]AnyOfUdmInfoobject `json:"servedUdmInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedAusfInfo *map[string]AnyOfAusfInfoobject `json:"servedAusfInfo,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedAusfInfoList *map[string]map[string]AnyOfAusfInfoobject `json:"servedAusfInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedAmfInfo *map[string]AnyOfAmfInfoobject `json:"servedAmfInfo,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedAmfInfoList *map[string]map[string]AnyOfAmfInfoobject `json:"servedAmfInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedSmfInfo *map[string]AnyOfSmfInfoobject `json:"servedSmfInfo,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedSmfInfoList *map[string]map[string]AnyOfSmfInfoobject `json:"servedSmfInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedUpfInfo *map[string]AnyOfUpfInfoobject `json:"servedUpfInfo,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedUpfInfoList *map[string]map[string]AnyOfUpfInfoobject `json:"servedUpfInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedPcfInfo *map[string]AnyOfPcfInfoobject `json:"servedPcfInfo,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedPcfInfoList *map[string]map[string]AnyOfPcfInfoobject `json:"servedPcfInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedBsfInfo *map[string]AnyOfBsfInfoobject `json:"servedBsfInfo,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedBsfInfoList *map[string]map[string]AnyOfBsfInfoobject `json:"servedBsfInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedChfInfo *map[string]AnyOfChfInfoobject `json:"servedChfInfo,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedChfInfoList *map[string]map[string]AnyOfChfInfoobject `json:"servedChfInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedNefInfo *map[string]AnyOfNefInfoobject `json:"servedNefInfo,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedNwdafInfo *map[string]AnyOfNwdafInfoobject `json:"servedNwdafInfo,omitempty"`
	// A map (list of key-value pairs) where NF Instance Id serves as key
	ServedNwdafInfoList *map[string]map[string]NwdafInfo `json:"servedNwdafInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedPcscfInfoList *map[string]map[string]AnyOfPcscfInfoobject `json:"servedPcscfInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedGmlcInfo *map[string]AnyOfGmlcInfoobject `json:"servedGmlcInfo,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedLmfInfo *map[string]AnyOfLmfInfoobject `json:"servedLmfInfo,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedNfInfo *map[string]NfInfo `json:"servedNfInfo,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedHssInfoList *map[string]map[string]AnyOfHssInfoobject `json:"servedHssInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedUdsfInfo *map[string]AnyOfUdsfInfoobject `json:"servedUdsfInfo,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedUdsfInfoList *map[string]map[string]AnyOfUdsfInfoobject `json:"servedUdsfInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedScpInfoList *map[string]AnyOfScpInfoobject `json:"servedScpInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedSeppInfoList *map[string]AnyOfSeppInfoobject `json:"servedSeppInfoList,omitempty"`
	// A map (list of key-value pairs) where NF Instance Id serves as key
	ServedAanfInfoList *map[string]map[string]AnyOfAanfInfoobject `json:"servedAanfInfoList,omitempty"`
	Served5gDdnmfInfo *map[string]Model5GDdnmfInfo `json:"served5gDdnmfInfo,omitempty"`
	// A map (list of key-value pairs) where NF Instance Id serves as key
	ServedMfafInfoList *map[string]MfafInfo `json:"servedMfafInfoList,omitempty"`
	// A map (list of key-value pairs) where NF Instance Id serves as key
	ServedEasdfInfoList *map[string]map[string]EasdfInfo `json:"servedEasdfInfoList,omitempty"`
	// A map (list of key-value pairs) where NF Instance Id serves as key
	ServedDccfInfoList *map[string]DccfInfo `json:"servedDccfInfoList,omitempty"`
	// A map (list of key-value pairs) where nfInstanceId serves as key
	ServedMbSmfInfoList *map[string]map[string]AnyOfMbSmfInfoobject `json:"servedMbSmfInfoList,omitempty"`
	// A map (list of key-value pairs) where NF Instance Id serves as key
	ServedTsctsfInfoList *map[string]map[string]TsctsfInfo `json:"servedTsctsfInfoList,omitempty"`
}

// NewNrfInfo instantiates a new NrfInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNrfInfo() *NrfInfo {
	this := NrfInfo{}
	return &this
}

// NewNrfInfoWithDefaults instantiates a new NrfInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNrfInfoWithDefaults() *NrfInfo {
	this := NrfInfo{}
	return &this
}

// GetServedUdrInfo returns the ServedUdrInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedUdrInfo() map[string]AnyOfUdrInfoobject {
	if o == nil || o.ServedUdrInfo == nil {
		var ret map[string]AnyOfUdrInfoobject
		return ret
	}
	return *o.ServedUdrInfo
}

// GetServedUdrInfoOk returns a tuple with the ServedUdrInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedUdrInfoOk() (*map[string]AnyOfUdrInfoobject, bool) {
	if o == nil || o.ServedUdrInfo == nil {
		return nil, false
	}
	return o.ServedUdrInfo, true
}

// HasServedUdrInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedUdrInfo() bool {
	if o != nil && o.ServedUdrInfo != nil {
		return true
	}

	return false
}

// SetServedUdrInfo gets a reference to the given map[string]AnyOfUdrInfoobject and assigns it to the ServedUdrInfo field.
func (o *NrfInfo) SetServedUdrInfo(v map[string]AnyOfUdrInfoobject) {
	o.ServedUdrInfo = &v
}

// GetServedUdrInfoList returns the ServedUdrInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedUdrInfoList() map[string]map[string]AnyOfUdrInfoobject {
	if o == nil || o.ServedUdrInfoList == nil {
		var ret map[string]map[string]AnyOfUdrInfoobject
		return ret
	}
	return *o.ServedUdrInfoList
}

// GetServedUdrInfoListOk returns a tuple with the ServedUdrInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedUdrInfoListOk() (*map[string]map[string]AnyOfUdrInfoobject, bool) {
	if o == nil || o.ServedUdrInfoList == nil {
		return nil, false
	}
	return o.ServedUdrInfoList, true
}

// HasServedUdrInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedUdrInfoList() bool {
	if o != nil && o.ServedUdrInfoList != nil {
		return true
	}

	return false
}

// SetServedUdrInfoList gets a reference to the given map[string]map[string]AnyOfUdrInfoobject and assigns it to the ServedUdrInfoList field.
func (o *NrfInfo) SetServedUdrInfoList(v map[string]map[string]AnyOfUdrInfoobject) {
	o.ServedUdrInfoList = &v
}

// GetServedUdmInfo returns the ServedUdmInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedUdmInfo() map[string]AnyOfUdmInfoobject {
	if o == nil || o.ServedUdmInfo == nil {
		var ret map[string]AnyOfUdmInfoobject
		return ret
	}
	return *o.ServedUdmInfo
}

// GetServedUdmInfoOk returns a tuple with the ServedUdmInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedUdmInfoOk() (*map[string]AnyOfUdmInfoobject, bool) {
	if o == nil || o.ServedUdmInfo == nil {
		return nil, false
	}
	return o.ServedUdmInfo, true
}

// HasServedUdmInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedUdmInfo() bool {
	if o != nil && o.ServedUdmInfo != nil {
		return true
	}

	return false
}

// SetServedUdmInfo gets a reference to the given map[string]AnyOfUdmInfoobject and assigns it to the ServedUdmInfo field.
func (o *NrfInfo) SetServedUdmInfo(v map[string]AnyOfUdmInfoobject) {
	o.ServedUdmInfo = &v
}

// GetServedUdmInfoList returns the ServedUdmInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedUdmInfoList() map[string]map[string]AnyOfUdmInfoobject {
	if o == nil || o.ServedUdmInfoList == nil {
		var ret map[string]map[string]AnyOfUdmInfoobject
		return ret
	}
	return *o.ServedUdmInfoList
}

// GetServedUdmInfoListOk returns a tuple with the ServedUdmInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedUdmInfoListOk() (*map[string]map[string]AnyOfUdmInfoobject, bool) {
	if o == nil || o.ServedUdmInfoList == nil {
		return nil, false
	}
	return o.ServedUdmInfoList, true
}

// HasServedUdmInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedUdmInfoList() bool {
	if o != nil && o.ServedUdmInfoList != nil {
		return true
	}

	return false
}

// SetServedUdmInfoList gets a reference to the given map[string]map[string]AnyOfUdmInfoobject and assigns it to the ServedUdmInfoList field.
func (o *NrfInfo) SetServedUdmInfoList(v map[string]map[string]AnyOfUdmInfoobject) {
	o.ServedUdmInfoList = &v
}

// GetServedAusfInfo returns the ServedAusfInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedAusfInfo() map[string]AnyOfAusfInfoobject {
	if o == nil || o.ServedAusfInfo == nil {
		var ret map[string]AnyOfAusfInfoobject
		return ret
	}
	return *o.ServedAusfInfo
}

// GetServedAusfInfoOk returns a tuple with the ServedAusfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedAusfInfoOk() (*map[string]AnyOfAusfInfoobject, bool) {
	if o == nil || o.ServedAusfInfo == nil {
		return nil, false
	}
	return o.ServedAusfInfo, true
}

// HasServedAusfInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedAusfInfo() bool {
	if o != nil && o.ServedAusfInfo != nil {
		return true
	}

	return false
}

// SetServedAusfInfo gets a reference to the given map[string]AnyOfAusfInfoobject and assigns it to the ServedAusfInfo field.
func (o *NrfInfo) SetServedAusfInfo(v map[string]AnyOfAusfInfoobject) {
	o.ServedAusfInfo = &v
}

// GetServedAusfInfoList returns the ServedAusfInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedAusfInfoList() map[string]map[string]AnyOfAusfInfoobject {
	if o == nil || o.ServedAusfInfoList == nil {
		var ret map[string]map[string]AnyOfAusfInfoobject
		return ret
	}
	return *o.ServedAusfInfoList
}

// GetServedAusfInfoListOk returns a tuple with the ServedAusfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedAusfInfoListOk() (*map[string]map[string]AnyOfAusfInfoobject, bool) {
	if o == nil || o.ServedAusfInfoList == nil {
		return nil, false
	}
	return o.ServedAusfInfoList, true
}

// HasServedAusfInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedAusfInfoList() bool {
	if o != nil && o.ServedAusfInfoList != nil {
		return true
	}

	return false
}

// SetServedAusfInfoList gets a reference to the given map[string]map[string]AnyOfAusfInfoobject and assigns it to the ServedAusfInfoList field.
func (o *NrfInfo) SetServedAusfInfoList(v map[string]map[string]AnyOfAusfInfoobject) {
	o.ServedAusfInfoList = &v
}

// GetServedAmfInfo returns the ServedAmfInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedAmfInfo() map[string]AnyOfAmfInfoobject {
	if o == nil || o.ServedAmfInfo == nil {
		var ret map[string]AnyOfAmfInfoobject
		return ret
	}
	return *o.ServedAmfInfo
}

// GetServedAmfInfoOk returns a tuple with the ServedAmfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedAmfInfoOk() (*map[string]AnyOfAmfInfoobject, bool) {
	if o == nil || o.ServedAmfInfo == nil {
		return nil, false
	}
	return o.ServedAmfInfo, true
}

// HasServedAmfInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedAmfInfo() bool {
	if o != nil && o.ServedAmfInfo != nil {
		return true
	}

	return false
}

// SetServedAmfInfo gets a reference to the given map[string]AnyOfAmfInfoobject and assigns it to the ServedAmfInfo field.
func (o *NrfInfo) SetServedAmfInfo(v map[string]AnyOfAmfInfoobject) {
	o.ServedAmfInfo = &v
}

// GetServedAmfInfoList returns the ServedAmfInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedAmfInfoList() map[string]map[string]AnyOfAmfInfoobject {
	if o == nil || o.ServedAmfInfoList == nil {
		var ret map[string]map[string]AnyOfAmfInfoobject
		return ret
	}
	return *o.ServedAmfInfoList
}

// GetServedAmfInfoListOk returns a tuple with the ServedAmfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedAmfInfoListOk() (*map[string]map[string]AnyOfAmfInfoobject, bool) {
	if o == nil || o.ServedAmfInfoList == nil {
		return nil, false
	}
	return o.ServedAmfInfoList, true
}

// HasServedAmfInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedAmfInfoList() bool {
	if o != nil && o.ServedAmfInfoList != nil {
		return true
	}

	return false
}

// SetServedAmfInfoList gets a reference to the given map[string]map[string]AnyOfAmfInfoobject and assigns it to the ServedAmfInfoList field.
func (o *NrfInfo) SetServedAmfInfoList(v map[string]map[string]AnyOfAmfInfoobject) {
	o.ServedAmfInfoList = &v
}

// GetServedSmfInfo returns the ServedSmfInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedSmfInfo() map[string]AnyOfSmfInfoobject {
	if o == nil || o.ServedSmfInfo == nil {
		var ret map[string]AnyOfSmfInfoobject
		return ret
	}
	return *o.ServedSmfInfo
}

// GetServedSmfInfoOk returns a tuple with the ServedSmfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedSmfInfoOk() (*map[string]AnyOfSmfInfoobject, bool) {
	if o == nil || o.ServedSmfInfo == nil {
		return nil, false
	}
	return o.ServedSmfInfo, true
}

// HasServedSmfInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedSmfInfo() bool {
	if o != nil && o.ServedSmfInfo != nil {
		return true
	}

	return false
}

// SetServedSmfInfo gets a reference to the given map[string]AnyOfSmfInfoobject and assigns it to the ServedSmfInfo field.
func (o *NrfInfo) SetServedSmfInfo(v map[string]AnyOfSmfInfoobject) {
	o.ServedSmfInfo = &v
}

// GetServedSmfInfoList returns the ServedSmfInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedSmfInfoList() map[string]map[string]AnyOfSmfInfoobject {
	if o == nil || o.ServedSmfInfoList == nil {
		var ret map[string]map[string]AnyOfSmfInfoobject
		return ret
	}
	return *o.ServedSmfInfoList
}

// GetServedSmfInfoListOk returns a tuple with the ServedSmfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedSmfInfoListOk() (*map[string]map[string]AnyOfSmfInfoobject, bool) {
	if o == nil || o.ServedSmfInfoList == nil {
		return nil, false
	}
	return o.ServedSmfInfoList, true
}

// HasServedSmfInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedSmfInfoList() bool {
	if o != nil && o.ServedSmfInfoList != nil {
		return true
	}

	return false
}

// SetServedSmfInfoList gets a reference to the given map[string]map[string]AnyOfSmfInfoobject and assigns it to the ServedSmfInfoList field.
func (o *NrfInfo) SetServedSmfInfoList(v map[string]map[string]AnyOfSmfInfoobject) {
	o.ServedSmfInfoList = &v
}

// GetServedUpfInfo returns the ServedUpfInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedUpfInfo() map[string]AnyOfUpfInfoobject {
	if o == nil || o.ServedUpfInfo == nil {
		var ret map[string]AnyOfUpfInfoobject
		return ret
	}
	return *o.ServedUpfInfo
}

// GetServedUpfInfoOk returns a tuple with the ServedUpfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedUpfInfoOk() (*map[string]AnyOfUpfInfoobject, bool) {
	if o == nil || o.ServedUpfInfo == nil {
		return nil, false
	}
	return o.ServedUpfInfo, true
}

// HasServedUpfInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedUpfInfo() bool {
	if o != nil && o.ServedUpfInfo != nil {
		return true
	}

	return false
}

// SetServedUpfInfo gets a reference to the given map[string]AnyOfUpfInfoobject and assigns it to the ServedUpfInfo field.
func (o *NrfInfo) SetServedUpfInfo(v map[string]AnyOfUpfInfoobject) {
	o.ServedUpfInfo = &v
}

// GetServedUpfInfoList returns the ServedUpfInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedUpfInfoList() map[string]map[string]AnyOfUpfInfoobject {
	if o == nil || o.ServedUpfInfoList == nil {
		var ret map[string]map[string]AnyOfUpfInfoobject
		return ret
	}
	return *o.ServedUpfInfoList
}

// GetServedUpfInfoListOk returns a tuple with the ServedUpfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedUpfInfoListOk() (*map[string]map[string]AnyOfUpfInfoobject, bool) {
	if o == nil || o.ServedUpfInfoList == nil {
		return nil, false
	}
	return o.ServedUpfInfoList, true
}

// HasServedUpfInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedUpfInfoList() bool {
	if o != nil && o.ServedUpfInfoList != nil {
		return true
	}

	return false
}

// SetServedUpfInfoList gets a reference to the given map[string]map[string]AnyOfUpfInfoobject and assigns it to the ServedUpfInfoList field.
func (o *NrfInfo) SetServedUpfInfoList(v map[string]map[string]AnyOfUpfInfoobject) {
	o.ServedUpfInfoList = &v
}

// GetServedPcfInfo returns the ServedPcfInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedPcfInfo() map[string]AnyOfPcfInfoobject {
	if o == nil || o.ServedPcfInfo == nil {
		var ret map[string]AnyOfPcfInfoobject
		return ret
	}
	return *o.ServedPcfInfo
}

// GetServedPcfInfoOk returns a tuple with the ServedPcfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedPcfInfoOk() (*map[string]AnyOfPcfInfoobject, bool) {
	if o == nil || o.ServedPcfInfo == nil {
		return nil, false
	}
	return o.ServedPcfInfo, true
}

// HasServedPcfInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedPcfInfo() bool {
	if o != nil && o.ServedPcfInfo != nil {
		return true
	}

	return false
}

// SetServedPcfInfo gets a reference to the given map[string]AnyOfPcfInfoobject and assigns it to the ServedPcfInfo field.
func (o *NrfInfo) SetServedPcfInfo(v map[string]AnyOfPcfInfoobject) {
	o.ServedPcfInfo = &v
}

// GetServedPcfInfoList returns the ServedPcfInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedPcfInfoList() map[string]map[string]AnyOfPcfInfoobject {
	if o == nil || o.ServedPcfInfoList == nil {
		var ret map[string]map[string]AnyOfPcfInfoobject
		return ret
	}
	return *o.ServedPcfInfoList
}

// GetServedPcfInfoListOk returns a tuple with the ServedPcfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedPcfInfoListOk() (*map[string]map[string]AnyOfPcfInfoobject, bool) {
	if o == nil || o.ServedPcfInfoList == nil {
		return nil, false
	}
	return o.ServedPcfInfoList, true
}

// HasServedPcfInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedPcfInfoList() bool {
	if o != nil && o.ServedPcfInfoList != nil {
		return true
	}

	return false
}

// SetServedPcfInfoList gets a reference to the given map[string]map[string]AnyOfPcfInfoobject and assigns it to the ServedPcfInfoList field.
func (o *NrfInfo) SetServedPcfInfoList(v map[string]map[string]AnyOfPcfInfoobject) {
	o.ServedPcfInfoList = &v
}

// GetServedBsfInfo returns the ServedBsfInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedBsfInfo() map[string]AnyOfBsfInfoobject {
	if o == nil || o.ServedBsfInfo == nil {
		var ret map[string]AnyOfBsfInfoobject
		return ret
	}
	return *o.ServedBsfInfo
}

// GetServedBsfInfoOk returns a tuple with the ServedBsfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedBsfInfoOk() (*map[string]AnyOfBsfInfoobject, bool) {
	if o == nil || o.ServedBsfInfo == nil {
		return nil, false
	}
	return o.ServedBsfInfo, true
}

// HasServedBsfInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedBsfInfo() bool {
	if o != nil && o.ServedBsfInfo != nil {
		return true
	}

	return false
}

// SetServedBsfInfo gets a reference to the given map[string]AnyOfBsfInfoobject and assigns it to the ServedBsfInfo field.
func (o *NrfInfo) SetServedBsfInfo(v map[string]AnyOfBsfInfoobject) {
	o.ServedBsfInfo = &v
}

// GetServedBsfInfoList returns the ServedBsfInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedBsfInfoList() map[string]map[string]AnyOfBsfInfoobject {
	if o == nil || o.ServedBsfInfoList == nil {
		var ret map[string]map[string]AnyOfBsfInfoobject
		return ret
	}
	return *o.ServedBsfInfoList
}

// GetServedBsfInfoListOk returns a tuple with the ServedBsfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedBsfInfoListOk() (*map[string]map[string]AnyOfBsfInfoobject, bool) {
	if o == nil || o.ServedBsfInfoList == nil {
		return nil, false
	}
	return o.ServedBsfInfoList, true
}

// HasServedBsfInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedBsfInfoList() bool {
	if o != nil && o.ServedBsfInfoList != nil {
		return true
	}

	return false
}

// SetServedBsfInfoList gets a reference to the given map[string]map[string]AnyOfBsfInfoobject and assigns it to the ServedBsfInfoList field.
func (o *NrfInfo) SetServedBsfInfoList(v map[string]map[string]AnyOfBsfInfoobject) {
	o.ServedBsfInfoList = &v
}

// GetServedChfInfo returns the ServedChfInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedChfInfo() map[string]AnyOfChfInfoobject {
	if o == nil || o.ServedChfInfo == nil {
		var ret map[string]AnyOfChfInfoobject
		return ret
	}
	return *o.ServedChfInfo
}

// GetServedChfInfoOk returns a tuple with the ServedChfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedChfInfoOk() (*map[string]AnyOfChfInfoobject, bool) {
	if o == nil || o.ServedChfInfo == nil {
		return nil, false
	}
	return o.ServedChfInfo, true
}

// HasServedChfInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedChfInfo() bool {
	if o != nil && o.ServedChfInfo != nil {
		return true
	}

	return false
}

// SetServedChfInfo gets a reference to the given map[string]AnyOfChfInfoobject and assigns it to the ServedChfInfo field.
func (o *NrfInfo) SetServedChfInfo(v map[string]AnyOfChfInfoobject) {
	o.ServedChfInfo = &v
}

// GetServedChfInfoList returns the ServedChfInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedChfInfoList() map[string]map[string]AnyOfChfInfoobject {
	if o == nil || o.ServedChfInfoList == nil {
		var ret map[string]map[string]AnyOfChfInfoobject
		return ret
	}
	return *o.ServedChfInfoList
}

// GetServedChfInfoListOk returns a tuple with the ServedChfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedChfInfoListOk() (*map[string]map[string]AnyOfChfInfoobject, bool) {
	if o == nil || o.ServedChfInfoList == nil {
		return nil, false
	}
	return o.ServedChfInfoList, true
}

// HasServedChfInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedChfInfoList() bool {
	if o != nil && o.ServedChfInfoList != nil {
		return true
	}

	return false
}

// SetServedChfInfoList gets a reference to the given map[string]map[string]AnyOfChfInfoobject and assigns it to the ServedChfInfoList field.
func (o *NrfInfo) SetServedChfInfoList(v map[string]map[string]AnyOfChfInfoobject) {
	o.ServedChfInfoList = &v
}

// GetServedNefInfo returns the ServedNefInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedNefInfo() map[string]AnyOfNefInfoobject {
	if o == nil || o.ServedNefInfo == nil {
		var ret map[string]AnyOfNefInfoobject
		return ret
	}
	return *o.ServedNefInfo
}

// GetServedNefInfoOk returns a tuple with the ServedNefInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedNefInfoOk() (*map[string]AnyOfNefInfoobject, bool) {
	if o == nil || o.ServedNefInfo == nil {
		return nil, false
	}
	return o.ServedNefInfo, true
}

// HasServedNefInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedNefInfo() bool {
	if o != nil && o.ServedNefInfo != nil {
		return true
	}

	return false
}

// SetServedNefInfo gets a reference to the given map[string]AnyOfNefInfoobject and assigns it to the ServedNefInfo field.
func (o *NrfInfo) SetServedNefInfo(v map[string]AnyOfNefInfoobject) {
	o.ServedNefInfo = &v
}

// GetServedNwdafInfo returns the ServedNwdafInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedNwdafInfo() map[string]AnyOfNwdafInfoobject {
	if o == nil || o.ServedNwdafInfo == nil {
		var ret map[string]AnyOfNwdafInfoobject
		return ret
	}
	return *o.ServedNwdafInfo
}

// GetServedNwdafInfoOk returns a tuple with the ServedNwdafInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedNwdafInfoOk() (*map[string]AnyOfNwdafInfoobject, bool) {
	if o == nil || o.ServedNwdafInfo == nil {
		return nil, false
	}
	return o.ServedNwdafInfo, true
}

// HasServedNwdafInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedNwdafInfo() bool {
	if o != nil && o.ServedNwdafInfo != nil {
		return true
	}

	return false
}

// SetServedNwdafInfo gets a reference to the given map[string]AnyOfNwdafInfoobject and assigns it to the ServedNwdafInfo field.
func (o *NrfInfo) SetServedNwdafInfo(v map[string]AnyOfNwdafInfoobject) {
	o.ServedNwdafInfo = &v
}

// GetServedNwdafInfoList returns the ServedNwdafInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedNwdafInfoList() map[string]map[string]NwdafInfo {
	if o == nil || o.ServedNwdafInfoList == nil {
		var ret map[string]map[string]NwdafInfo
		return ret
	}
	return *o.ServedNwdafInfoList
}

// GetServedNwdafInfoListOk returns a tuple with the ServedNwdafInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedNwdafInfoListOk() (*map[string]map[string]NwdafInfo, bool) {
	if o == nil || o.ServedNwdafInfoList == nil {
		return nil, false
	}
	return o.ServedNwdafInfoList, true
}

// HasServedNwdafInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedNwdafInfoList() bool {
	if o != nil && o.ServedNwdafInfoList != nil {
		return true
	}

	return false
}

// SetServedNwdafInfoList gets a reference to the given map[string]map[string]NwdafInfo and assigns it to the ServedNwdafInfoList field.
func (o *NrfInfo) SetServedNwdafInfoList(v map[string]map[string]NwdafInfo) {
	o.ServedNwdafInfoList = &v
}

// GetServedPcscfInfoList returns the ServedPcscfInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedPcscfInfoList() map[string]map[string]AnyOfPcscfInfoobject {
	if o == nil || o.ServedPcscfInfoList == nil {
		var ret map[string]map[string]AnyOfPcscfInfoobject
		return ret
	}
	return *o.ServedPcscfInfoList
}

// GetServedPcscfInfoListOk returns a tuple with the ServedPcscfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedPcscfInfoListOk() (*map[string]map[string]AnyOfPcscfInfoobject, bool) {
	if o == nil || o.ServedPcscfInfoList == nil {
		return nil, false
	}
	return o.ServedPcscfInfoList, true
}

// HasServedPcscfInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedPcscfInfoList() bool {
	if o != nil && o.ServedPcscfInfoList != nil {
		return true
	}

	return false
}

// SetServedPcscfInfoList gets a reference to the given map[string]map[string]AnyOfPcscfInfoobject and assigns it to the ServedPcscfInfoList field.
func (o *NrfInfo) SetServedPcscfInfoList(v map[string]map[string]AnyOfPcscfInfoobject) {
	o.ServedPcscfInfoList = &v
}

// GetServedGmlcInfo returns the ServedGmlcInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedGmlcInfo() map[string]AnyOfGmlcInfoobject {
	if o == nil || o.ServedGmlcInfo == nil {
		var ret map[string]AnyOfGmlcInfoobject
		return ret
	}
	return *o.ServedGmlcInfo
}

// GetServedGmlcInfoOk returns a tuple with the ServedGmlcInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedGmlcInfoOk() (*map[string]AnyOfGmlcInfoobject, bool) {
	if o == nil || o.ServedGmlcInfo == nil {
		return nil, false
	}
	return o.ServedGmlcInfo, true
}

// HasServedGmlcInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedGmlcInfo() bool {
	if o != nil && o.ServedGmlcInfo != nil {
		return true
	}

	return false
}

// SetServedGmlcInfo gets a reference to the given map[string]AnyOfGmlcInfoobject and assigns it to the ServedGmlcInfo field.
func (o *NrfInfo) SetServedGmlcInfo(v map[string]AnyOfGmlcInfoobject) {
	o.ServedGmlcInfo = &v
}

// GetServedLmfInfo returns the ServedLmfInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedLmfInfo() map[string]AnyOfLmfInfoobject {
	if o == nil || o.ServedLmfInfo == nil {
		var ret map[string]AnyOfLmfInfoobject
		return ret
	}
	return *o.ServedLmfInfo
}

// GetServedLmfInfoOk returns a tuple with the ServedLmfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedLmfInfoOk() (*map[string]AnyOfLmfInfoobject, bool) {
	if o == nil || o.ServedLmfInfo == nil {
		return nil, false
	}
	return o.ServedLmfInfo, true
}

// HasServedLmfInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedLmfInfo() bool {
	if o != nil && o.ServedLmfInfo != nil {
		return true
	}

	return false
}

// SetServedLmfInfo gets a reference to the given map[string]AnyOfLmfInfoobject and assigns it to the ServedLmfInfo field.
func (o *NrfInfo) SetServedLmfInfo(v map[string]AnyOfLmfInfoobject) {
	o.ServedLmfInfo = &v
}

// GetServedNfInfo returns the ServedNfInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedNfInfo() map[string]NfInfo {
	if o == nil || o.ServedNfInfo == nil {
		var ret map[string]NfInfo
		return ret
	}
	return *o.ServedNfInfo
}

// GetServedNfInfoOk returns a tuple with the ServedNfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedNfInfoOk() (*map[string]NfInfo, bool) {
	if o == nil || o.ServedNfInfo == nil {
		return nil, false
	}
	return o.ServedNfInfo, true
}

// HasServedNfInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedNfInfo() bool {
	if o != nil && o.ServedNfInfo != nil {
		return true
	}

	return false
}

// SetServedNfInfo gets a reference to the given map[string]NfInfo and assigns it to the ServedNfInfo field.
func (o *NrfInfo) SetServedNfInfo(v map[string]NfInfo) {
	o.ServedNfInfo = &v
}

// GetServedHssInfoList returns the ServedHssInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedHssInfoList() map[string]map[string]AnyOfHssInfoobject {
	if o == nil || o.ServedHssInfoList == nil {
		var ret map[string]map[string]AnyOfHssInfoobject
		return ret
	}
	return *o.ServedHssInfoList
}

// GetServedHssInfoListOk returns a tuple with the ServedHssInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedHssInfoListOk() (*map[string]map[string]AnyOfHssInfoobject, bool) {
	if o == nil || o.ServedHssInfoList == nil {
		return nil, false
	}
	return o.ServedHssInfoList, true
}

// HasServedHssInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedHssInfoList() bool {
	if o != nil && o.ServedHssInfoList != nil {
		return true
	}

	return false
}

// SetServedHssInfoList gets a reference to the given map[string]map[string]AnyOfHssInfoobject and assigns it to the ServedHssInfoList field.
func (o *NrfInfo) SetServedHssInfoList(v map[string]map[string]AnyOfHssInfoobject) {
	o.ServedHssInfoList = &v
}

// GetServedUdsfInfo returns the ServedUdsfInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServedUdsfInfo() map[string]AnyOfUdsfInfoobject {
	if o == nil || o.ServedUdsfInfo == nil {
		var ret map[string]AnyOfUdsfInfoobject
		return ret
	}
	return *o.ServedUdsfInfo
}

// GetServedUdsfInfoOk returns a tuple with the ServedUdsfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedUdsfInfoOk() (*map[string]AnyOfUdsfInfoobject, bool) {
	if o == nil || o.ServedUdsfInfo == nil {
		return nil, false
	}
	return o.ServedUdsfInfo, true
}

// HasServedUdsfInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServedUdsfInfo() bool {
	if o != nil && o.ServedUdsfInfo != nil {
		return true
	}

	return false
}

// SetServedUdsfInfo gets a reference to the given map[string]AnyOfUdsfInfoobject and assigns it to the ServedUdsfInfo field.
func (o *NrfInfo) SetServedUdsfInfo(v map[string]AnyOfUdsfInfoobject) {
	o.ServedUdsfInfo = &v
}

// GetServedUdsfInfoList returns the ServedUdsfInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedUdsfInfoList() map[string]map[string]AnyOfUdsfInfoobject {
	if o == nil || o.ServedUdsfInfoList == nil {
		var ret map[string]map[string]AnyOfUdsfInfoobject
		return ret
	}
	return *o.ServedUdsfInfoList
}

// GetServedUdsfInfoListOk returns a tuple with the ServedUdsfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedUdsfInfoListOk() (*map[string]map[string]AnyOfUdsfInfoobject, bool) {
	if o == nil || o.ServedUdsfInfoList == nil {
		return nil, false
	}
	return o.ServedUdsfInfoList, true
}

// HasServedUdsfInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedUdsfInfoList() bool {
	if o != nil && o.ServedUdsfInfoList != nil {
		return true
	}

	return false
}

// SetServedUdsfInfoList gets a reference to the given map[string]map[string]AnyOfUdsfInfoobject and assigns it to the ServedUdsfInfoList field.
func (o *NrfInfo) SetServedUdsfInfoList(v map[string]map[string]AnyOfUdsfInfoobject) {
	o.ServedUdsfInfoList = &v
}

// GetServedScpInfoList returns the ServedScpInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedScpInfoList() map[string]AnyOfScpInfoobject {
	if o == nil || o.ServedScpInfoList == nil {
		var ret map[string]AnyOfScpInfoobject
		return ret
	}
	return *o.ServedScpInfoList
}

// GetServedScpInfoListOk returns a tuple with the ServedScpInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedScpInfoListOk() (*map[string]AnyOfScpInfoobject, bool) {
	if o == nil || o.ServedScpInfoList == nil {
		return nil, false
	}
	return o.ServedScpInfoList, true
}

// HasServedScpInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedScpInfoList() bool {
	if o != nil && o.ServedScpInfoList != nil {
		return true
	}

	return false
}

// SetServedScpInfoList gets a reference to the given map[string]AnyOfScpInfoobject and assigns it to the ServedScpInfoList field.
func (o *NrfInfo) SetServedScpInfoList(v map[string]AnyOfScpInfoobject) {
	o.ServedScpInfoList = &v
}

// GetServedSeppInfoList returns the ServedSeppInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedSeppInfoList() map[string]AnyOfSeppInfoobject {
	if o == nil || o.ServedSeppInfoList == nil {
		var ret map[string]AnyOfSeppInfoobject
		return ret
	}
	return *o.ServedSeppInfoList
}

// GetServedSeppInfoListOk returns a tuple with the ServedSeppInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedSeppInfoListOk() (*map[string]AnyOfSeppInfoobject, bool) {
	if o == nil || o.ServedSeppInfoList == nil {
		return nil, false
	}
	return o.ServedSeppInfoList, true
}

// HasServedSeppInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedSeppInfoList() bool {
	if o != nil && o.ServedSeppInfoList != nil {
		return true
	}

	return false
}

// SetServedSeppInfoList gets a reference to the given map[string]AnyOfSeppInfoobject and assigns it to the ServedSeppInfoList field.
func (o *NrfInfo) SetServedSeppInfoList(v map[string]AnyOfSeppInfoobject) {
	o.ServedSeppInfoList = &v
}

// GetServedAanfInfoList returns the ServedAanfInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedAanfInfoList() map[string]map[string]AnyOfAanfInfoobject {
	if o == nil || o.ServedAanfInfoList == nil {
		var ret map[string]map[string]AnyOfAanfInfoobject
		return ret
	}
	return *o.ServedAanfInfoList
}

// GetServedAanfInfoListOk returns a tuple with the ServedAanfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedAanfInfoListOk() (*map[string]map[string]AnyOfAanfInfoobject, bool) {
	if o == nil || o.ServedAanfInfoList == nil {
		return nil, false
	}
	return o.ServedAanfInfoList, true
}

// HasServedAanfInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedAanfInfoList() bool {
	if o != nil && o.ServedAanfInfoList != nil {
		return true
	}

	return false
}

// SetServedAanfInfoList gets a reference to the given map[string]map[string]AnyOfAanfInfoobject and assigns it to the ServedAanfInfoList field.
func (o *NrfInfo) SetServedAanfInfoList(v map[string]map[string]AnyOfAanfInfoobject) {
	o.ServedAanfInfoList = &v
}

// GetServed5gDdnmfInfo returns the Served5gDdnmfInfo field value if set, zero value otherwise.
func (o *NrfInfo) GetServed5gDdnmfInfo() map[string]Model5GDdnmfInfo {
	if o == nil || o.Served5gDdnmfInfo == nil {
		var ret map[string]Model5GDdnmfInfo
		return ret
	}
	return *o.Served5gDdnmfInfo
}

// GetServed5gDdnmfInfoOk returns a tuple with the Served5gDdnmfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServed5gDdnmfInfoOk() (*map[string]Model5GDdnmfInfo, bool) {
	if o == nil || o.Served5gDdnmfInfo == nil {
		return nil, false
	}
	return o.Served5gDdnmfInfo, true
}

// HasServed5gDdnmfInfo returns a boolean if a field has been set.
func (o *NrfInfo) HasServed5gDdnmfInfo() bool {
	if o != nil && o.Served5gDdnmfInfo != nil {
		return true
	}

	return false
}

// SetServed5gDdnmfInfo gets a reference to the given map[string]Model5GDdnmfInfo and assigns it to the Served5gDdnmfInfo field.
func (o *NrfInfo) SetServed5gDdnmfInfo(v map[string]Model5GDdnmfInfo) {
	o.Served5gDdnmfInfo = &v
}

// GetServedMfafInfoList returns the ServedMfafInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedMfafInfoList() map[string]MfafInfo {
	if o == nil || o.ServedMfafInfoList == nil {
		var ret map[string]MfafInfo
		return ret
	}
	return *o.ServedMfafInfoList
}

// GetServedMfafInfoListOk returns a tuple with the ServedMfafInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedMfafInfoListOk() (*map[string]MfafInfo, bool) {
	if o == nil || o.ServedMfafInfoList == nil {
		return nil, false
	}
	return o.ServedMfafInfoList, true
}

// HasServedMfafInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedMfafInfoList() bool {
	if o != nil && o.ServedMfafInfoList != nil {
		return true
	}

	return false
}

// SetServedMfafInfoList gets a reference to the given map[string]MfafInfo and assigns it to the ServedMfafInfoList field.
func (o *NrfInfo) SetServedMfafInfoList(v map[string]MfafInfo) {
	o.ServedMfafInfoList = &v
}

// GetServedEasdfInfoList returns the ServedEasdfInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedEasdfInfoList() map[string]map[string]EasdfInfo {
	if o == nil || o.ServedEasdfInfoList == nil {
		var ret map[string]map[string]EasdfInfo
		return ret
	}
	return *o.ServedEasdfInfoList
}

// GetServedEasdfInfoListOk returns a tuple with the ServedEasdfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedEasdfInfoListOk() (*map[string]map[string]EasdfInfo, bool) {
	if o == nil || o.ServedEasdfInfoList == nil {
		return nil, false
	}
	return o.ServedEasdfInfoList, true
}

// HasServedEasdfInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedEasdfInfoList() bool {
	if o != nil && o.ServedEasdfInfoList != nil {
		return true
	}

	return false
}

// SetServedEasdfInfoList gets a reference to the given map[string]map[string]EasdfInfo and assigns it to the ServedEasdfInfoList field.
func (o *NrfInfo) SetServedEasdfInfoList(v map[string]map[string]EasdfInfo) {
	o.ServedEasdfInfoList = &v
}

// GetServedDccfInfoList returns the ServedDccfInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedDccfInfoList() map[string]DccfInfo {
	if o == nil || o.ServedDccfInfoList == nil {
		var ret map[string]DccfInfo
		return ret
	}
	return *o.ServedDccfInfoList
}

// GetServedDccfInfoListOk returns a tuple with the ServedDccfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedDccfInfoListOk() (*map[string]DccfInfo, bool) {
	if o == nil || o.ServedDccfInfoList == nil {
		return nil, false
	}
	return o.ServedDccfInfoList, true
}

// HasServedDccfInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedDccfInfoList() bool {
	if o != nil && o.ServedDccfInfoList != nil {
		return true
	}

	return false
}

// SetServedDccfInfoList gets a reference to the given map[string]DccfInfo and assigns it to the ServedDccfInfoList field.
func (o *NrfInfo) SetServedDccfInfoList(v map[string]DccfInfo) {
	o.ServedDccfInfoList = &v
}

// GetServedMbSmfInfoList returns the ServedMbSmfInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedMbSmfInfoList() map[string]map[string]AnyOfMbSmfInfoobject {
	if o == nil || o.ServedMbSmfInfoList == nil {
		var ret map[string]map[string]AnyOfMbSmfInfoobject
		return ret
	}
	return *o.ServedMbSmfInfoList
}

// GetServedMbSmfInfoListOk returns a tuple with the ServedMbSmfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedMbSmfInfoListOk() (*map[string]map[string]AnyOfMbSmfInfoobject, bool) {
	if o == nil || o.ServedMbSmfInfoList == nil {
		return nil, false
	}
	return o.ServedMbSmfInfoList, true
}

// HasServedMbSmfInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedMbSmfInfoList() bool {
	if o != nil && o.ServedMbSmfInfoList != nil {
		return true
	}

	return false
}

// SetServedMbSmfInfoList gets a reference to the given map[string]map[string]AnyOfMbSmfInfoobject and assigns it to the ServedMbSmfInfoList field.
func (o *NrfInfo) SetServedMbSmfInfoList(v map[string]map[string]AnyOfMbSmfInfoobject) {
	o.ServedMbSmfInfoList = &v
}

// GetServedTsctsfInfoList returns the ServedTsctsfInfoList field value if set, zero value otherwise.
func (o *NrfInfo) GetServedTsctsfInfoList() map[string]map[string]TsctsfInfo {
	if o == nil || o.ServedTsctsfInfoList == nil {
		var ret map[string]map[string]TsctsfInfo
		return ret
	}
	return *o.ServedTsctsfInfoList
}

// GetServedTsctsfInfoListOk returns a tuple with the ServedTsctsfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrfInfo) GetServedTsctsfInfoListOk() (*map[string]map[string]TsctsfInfo, bool) {
	if o == nil || o.ServedTsctsfInfoList == nil {
		return nil, false
	}
	return o.ServedTsctsfInfoList, true
}

// HasServedTsctsfInfoList returns a boolean if a field has been set.
func (o *NrfInfo) HasServedTsctsfInfoList() bool {
	if o != nil && o.ServedTsctsfInfoList != nil {
		return true
	}

	return false
}

// SetServedTsctsfInfoList gets a reference to the given map[string]map[string]TsctsfInfo and assigns it to the ServedTsctsfInfoList field.
func (o *NrfInfo) SetServedTsctsfInfoList(v map[string]map[string]TsctsfInfo) {
	o.ServedTsctsfInfoList = &v
}

func (o NrfInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServedUdrInfo != nil {
		toSerialize["servedUdrInfo"] = o.ServedUdrInfo
	}
	if o.ServedUdrInfoList != nil {
		toSerialize["servedUdrInfoList"] = o.ServedUdrInfoList
	}
	if o.ServedUdmInfo != nil {
		toSerialize["servedUdmInfo"] = o.ServedUdmInfo
	}
	if o.ServedUdmInfoList != nil {
		toSerialize["servedUdmInfoList"] = o.ServedUdmInfoList
	}
	if o.ServedAusfInfo != nil {
		toSerialize["servedAusfInfo"] = o.ServedAusfInfo
	}
	if o.ServedAusfInfoList != nil {
		toSerialize["servedAusfInfoList"] = o.ServedAusfInfoList
	}
	if o.ServedAmfInfo != nil {
		toSerialize["servedAmfInfo"] = o.ServedAmfInfo
	}
	if o.ServedAmfInfoList != nil {
		toSerialize["servedAmfInfoList"] = o.ServedAmfInfoList
	}
	if o.ServedSmfInfo != nil {
		toSerialize["servedSmfInfo"] = o.ServedSmfInfo
	}
	if o.ServedSmfInfoList != nil {
		toSerialize["servedSmfInfoList"] = o.ServedSmfInfoList
	}
	if o.ServedUpfInfo != nil {
		toSerialize["servedUpfInfo"] = o.ServedUpfInfo
	}
	if o.ServedUpfInfoList != nil {
		toSerialize["servedUpfInfoList"] = o.ServedUpfInfoList
	}
	if o.ServedPcfInfo != nil {
		toSerialize["servedPcfInfo"] = o.ServedPcfInfo
	}
	if o.ServedPcfInfoList != nil {
		toSerialize["servedPcfInfoList"] = o.ServedPcfInfoList
	}
	if o.ServedBsfInfo != nil {
		toSerialize["servedBsfInfo"] = o.ServedBsfInfo
	}
	if o.ServedBsfInfoList != nil {
		toSerialize["servedBsfInfoList"] = o.ServedBsfInfoList
	}
	if o.ServedChfInfo != nil {
		toSerialize["servedChfInfo"] = o.ServedChfInfo
	}
	if o.ServedChfInfoList != nil {
		toSerialize["servedChfInfoList"] = o.ServedChfInfoList
	}
	if o.ServedNefInfo != nil {
		toSerialize["servedNefInfo"] = o.ServedNefInfo
	}
	if o.ServedNwdafInfo != nil {
		toSerialize["servedNwdafInfo"] = o.ServedNwdafInfo
	}
	if o.ServedNwdafInfoList != nil {
		toSerialize["servedNwdafInfoList"] = o.ServedNwdafInfoList
	}
	if o.ServedPcscfInfoList != nil {
		toSerialize["servedPcscfInfoList"] = o.ServedPcscfInfoList
	}
	if o.ServedGmlcInfo != nil {
		toSerialize["servedGmlcInfo"] = o.ServedGmlcInfo
	}
	if o.ServedLmfInfo != nil {
		toSerialize["servedLmfInfo"] = o.ServedLmfInfo
	}
	if o.ServedNfInfo != nil {
		toSerialize["servedNfInfo"] = o.ServedNfInfo
	}
	if o.ServedHssInfoList != nil {
		toSerialize["servedHssInfoList"] = o.ServedHssInfoList
	}
	if o.ServedUdsfInfo != nil {
		toSerialize["servedUdsfInfo"] = o.ServedUdsfInfo
	}
	if o.ServedUdsfInfoList != nil {
		toSerialize["servedUdsfInfoList"] = o.ServedUdsfInfoList
	}
	if o.ServedScpInfoList != nil {
		toSerialize["servedScpInfoList"] = o.ServedScpInfoList
	}
	if o.ServedSeppInfoList != nil {
		toSerialize["servedSeppInfoList"] = o.ServedSeppInfoList
	}
	if o.ServedAanfInfoList != nil {
		toSerialize["servedAanfInfoList"] = o.ServedAanfInfoList
	}
	if o.Served5gDdnmfInfo != nil {
		toSerialize["served5gDdnmfInfo"] = o.Served5gDdnmfInfo
	}
	if o.ServedMfafInfoList != nil {
		toSerialize["servedMfafInfoList"] = o.ServedMfafInfoList
	}
	if o.ServedEasdfInfoList != nil {
		toSerialize["servedEasdfInfoList"] = o.ServedEasdfInfoList
	}
	if o.ServedDccfInfoList != nil {
		toSerialize["servedDccfInfoList"] = o.ServedDccfInfoList
	}
	if o.ServedMbSmfInfoList != nil {
		toSerialize["servedMbSmfInfoList"] = o.ServedMbSmfInfoList
	}
	if o.ServedTsctsfInfoList != nil {
		toSerialize["servedTsctsfInfoList"] = o.ServedTsctsfInfoList
	}
	return json.Marshal(toSerialize)
}

type NullableNrfInfo struct {
	value *NrfInfo
	isSet bool
}

func (v NullableNrfInfo) Get() *NrfInfo {
	return v.value
}

func (v *NullableNrfInfo) Set(val *NrfInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableNrfInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableNrfInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNrfInfo(val *NrfInfo) *NullableNrfInfo {
	return &NullableNrfInfo{value: val, isSet: true}
}

func (v NullableNrfInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNrfInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


