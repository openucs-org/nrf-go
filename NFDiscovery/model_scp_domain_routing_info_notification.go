/*
NRF NFDiscovery Service

NRF NFDiscovery Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.2.0-alpha.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ScpDomainRoutingInfoNotification SCP Domain Routing Information Notification
type ScpDomainRoutingInfoNotification struct {
	RoutingInfo ScpDomainRoutingInformation `json:"routingInfo"`
	LocalInd *bool `json:"localInd,omitempty"`
}

// NewScpDomainRoutingInfoNotification instantiates a new ScpDomainRoutingInfoNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScpDomainRoutingInfoNotification(routingInfo ScpDomainRoutingInformation) *ScpDomainRoutingInfoNotification {
	this := ScpDomainRoutingInfoNotification{}
	this.RoutingInfo = routingInfo
	var localInd bool = false
	this.LocalInd = &localInd
	return &this
}

// NewScpDomainRoutingInfoNotificationWithDefaults instantiates a new ScpDomainRoutingInfoNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScpDomainRoutingInfoNotificationWithDefaults() *ScpDomainRoutingInfoNotification {
	this := ScpDomainRoutingInfoNotification{}
	var localInd bool = false
	this.LocalInd = &localInd
	return &this
}

// GetRoutingInfo returns the RoutingInfo field value
func (o *ScpDomainRoutingInfoNotification) GetRoutingInfo() ScpDomainRoutingInformation {
	if o == nil {
		var ret ScpDomainRoutingInformation
		return ret
	}

	return o.RoutingInfo
}

// GetRoutingInfoOk returns a tuple with the RoutingInfo field value
// and a boolean to check if the value has been set.
func (o *ScpDomainRoutingInfoNotification) GetRoutingInfoOk() (*ScpDomainRoutingInformation, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RoutingInfo, true
}

// SetRoutingInfo sets field value
func (o *ScpDomainRoutingInfoNotification) SetRoutingInfo(v ScpDomainRoutingInformation) {
	o.RoutingInfo = v
}

// GetLocalInd returns the LocalInd field value if set, zero value otherwise.
func (o *ScpDomainRoutingInfoNotification) GetLocalInd() bool {
	if o == nil || o.LocalInd == nil {
		var ret bool
		return ret
	}
	return *o.LocalInd
}

// GetLocalIndOk returns a tuple with the LocalInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScpDomainRoutingInfoNotification) GetLocalIndOk() (*bool, bool) {
	if o == nil || o.LocalInd == nil {
		return nil, false
	}
	return o.LocalInd, true
}

// HasLocalInd returns a boolean if a field has been set.
func (o *ScpDomainRoutingInfoNotification) HasLocalInd() bool {
	if o != nil && o.LocalInd != nil {
		return true
	}

	return false
}

// SetLocalInd gets a reference to the given bool and assigns it to the LocalInd field.
func (o *ScpDomainRoutingInfoNotification) SetLocalInd(v bool) {
	o.LocalInd = &v
}

func (o ScpDomainRoutingInfoNotification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["routingInfo"] = o.RoutingInfo
	}
	if o.LocalInd != nil {
		toSerialize["localInd"] = o.LocalInd
	}
	return json.Marshal(toSerialize)
}

type NullableScpDomainRoutingInfoNotification struct {
	value *ScpDomainRoutingInfoNotification
	isSet bool
}

func (v NullableScpDomainRoutingInfoNotification) Get() *ScpDomainRoutingInfoNotification {
	return v.value
}

func (v *NullableScpDomainRoutingInfoNotification) Set(val *ScpDomainRoutingInfoNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableScpDomainRoutingInfoNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableScpDomainRoutingInfoNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScpDomainRoutingInfoNotification(val *ScpDomainRoutingInfoNotification) *NullableScpDomainRoutingInfoNotification {
	return &NullableScpDomainRoutingInfoNotification{value: val, isSet: true}
}

func (v NullableScpDomainRoutingInfoNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScpDomainRoutingInfoNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


