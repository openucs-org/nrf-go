/*
NRF NFDiscovery Service

NRF NFDiscovery Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.2.0-alpha.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ScpDomainRoutingInfoSubscription SCP Domain Routing Information Subscription
type ScpDomainRoutingInfoSubscription struct {
	// String providing an URI formatted according to RFC 3986
	CallbackUri string `json:"callbackUri"`
	// string with format \"date-time\" as defined in OpenAPI.
	ValidityTime *time.Time `json:"validityTime,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	ReqInstanceId *string `json:"reqInstanceId,omitempty"`
	LocalInd *bool `json:"localInd,omitempty"`
}

// NewScpDomainRoutingInfoSubscription instantiates a new ScpDomainRoutingInfoSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScpDomainRoutingInfoSubscription(callbackUri string) *ScpDomainRoutingInfoSubscription {
	this := ScpDomainRoutingInfoSubscription{}
	this.CallbackUri = callbackUri
	var localInd bool = false
	this.LocalInd = &localInd
	return &this
}

// NewScpDomainRoutingInfoSubscriptionWithDefaults instantiates a new ScpDomainRoutingInfoSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScpDomainRoutingInfoSubscriptionWithDefaults() *ScpDomainRoutingInfoSubscription {
	this := ScpDomainRoutingInfoSubscription{}
	var localInd bool = false
	this.LocalInd = &localInd
	return &this
}

// GetCallbackUri returns the CallbackUri field value
func (o *ScpDomainRoutingInfoSubscription) GetCallbackUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallbackUri
}

// GetCallbackUriOk returns a tuple with the CallbackUri field value
// and a boolean to check if the value has been set.
func (o *ScpDomainRoutingInfoSubscription) GetCallbackUriOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CallbackUri, true
}

// SetCallbackUri sets field value
func (o *ScpDomainRoutingInfoSubscription) SetCallbackUri(v string) {
	o.CallbackUri = v
}

// GetValidityTime returns the ValidityTime field value if set, zero value otherwise.
func (o *ScpDomainRoutingInfoSubscription) GetValidityTime() time.Time {
	if o == nil || o.ValidityTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ValidityTime
}

// GetValidityTimeOk returns a tuple with the ValidityTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScpDomainRoutingInfoSubscription) GetValidityTimeOk() (*time.Time, bool) {
	if o == nil || o.ValidityTime == nil {
		return nil, false
	}
	return o.ValidityTime, true
}

// HasValidityTime returns a boolean if a field has been set.
func (o *ScpDomainRoutingInfoSubscription) HasValidityTime() bool {
	if o != nil && o.ValidityTime != nil {
		return true
	}

	return false
}

// SetValidityTime gets a reference to the given time.Time and assigns it to the ValidityTime field.
func (o *ScpDomainRoutingInfoSubscription) SetValidityTime(v time.Time) {
	o.ValidityTime = &v
}

// GetReqInstanceId returns the ReqInstanceId field value if set, zero value otherwise.
func (o *ScpDomainRoutingInfoSubscription) GetReqInstanceId() string {
	if o == nil || o.ReqInstanceId == nil {
		var ret string
		return ret
	}
	return *o.ReqInstanceId
}

// GetReqInstanceIdOk returns a tuple with the ReqInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScpDomainRoutingInfoSubscription) GetReqInstanceIdOk() (*string, bool) {
	if o == nil || o.ReqInstanceId == nil {
		return nil, false
	}
	return o.ReqInstanceId, true
}

// HasReqInstanceId returns a boolean if a field has been set.
func (o *ScpDomainRoutingInfoSubscription) HasReqInstanceId() bool {
	if o != nil && o.ReqInstanceId != nil {
		return true
	}

	return false
}

// SetReqInstanceId gets a reference to the given string and assigns it to the ReqInstanceId field.
func (o *ScpDomainRoutingInfoSubscription) SetReqInstanceId(v string) {
	o.ReqInstanceId = &v
}

// GetLocalInd returns the LocalInd field value if set, zero value otherwise.
func (o *ScpDomainRoutingInfoSubscription) GetLocalInd() bool {
	if o == nil || o.LocalInd == nil {
		var ret bool
		return ret
	}
	return *o.LocalInd
}

// GetLocalIndOk returns a tuple with the LocalInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScpDomainRoutingInfoSubscription) GetLocalIndOk() (*bool, bool) {
	if o == nil || o.LocalInd == nil {
		return nil, false
	}
	return o.LocalInd, true
}

// HasLocalInd returns a boolean if a field has been set.
func (o *ScpDomainRoutingInfoSubscription) HasLocalInd() bool {
	if o != nil && o.LocalInd != nil {
		return true
	}

	return false
}

// SetLocalInd gets a reference to the given bool and assigns it to the LocalInd field.
func (o *ScpDomainRoutingInfoSubscription) SetLocalInd(v bool) {
	o.LocalInd = &v
}

func (o ScpDomainRoutingInfoSubscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["callbackUri"] = o.CallbackUri
	}
	if o.ValidityTime != nil {
		toSerialize["validityTime"] = o.ValidityTime
	}
	if o.ReqInstanceId != nil {
		toSerialize["reqInstanceId"] = o.ReqInstanceId
	}
	if o.LocalInd != nil {
		toSerialize["localInd"] = o.LocalInd
	}
	return json.Marshal(toSerialize)
}

type NullableScpDomainRoutingInfoSubscription struct {
	value *ScpDomainRoutingInfoSubscription
	isSet bool
}

func (v NullableScpDomainRoutingInfoSubscription) Get() *ScpDomainRoutingInfoSubscription {
	return v.value
}

func (v *NullableScpDomainRoutingInfoSubscription) Set(val *ScpDomainRoutingInfoSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableScpDomainRoutingInfoSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableScpDomainRoutingInfoSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScpDomainRoutingInfoSubscription(val *ScpDomainRoutingInfoSubscription) *NullableScpDomainRoutingInfoSubscription {
	return &NullableScpDomainRoutingInfoSubscription{value: val, isSet: true}
}

func (v NullableScpDomainRoutingInfoSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScpDomainRoutingInfoSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


