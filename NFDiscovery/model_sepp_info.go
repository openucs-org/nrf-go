/*
NRF NFDiscovery Service

NRF NFDiscovery Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.2.0-alpha.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SeppInfo Information of a SEPP Instance
type SeppInfo struct {
	// Port numbers for HTTP and HTTPS. The key of the map shall be \"http\" or \"https\"
	SeppPorts *map[string]int32 `json:"seppPorts,omitempty"`
	RemotePlmnList *[]PlmnId `json:"remotePlmnList,omitempty"`
}

// NewSeppInfo instantiates a new SeppInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeppInfo() *SeppInfo {
	this := SeppInfo{}
	return &this
}

// NewSeppInfoWithDefaults instantiates a new SeppInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeppInfoWithDefaults() *SeppInfo {
	this := SeppInfo{}
	return &this
}

// GetSeppPorts returns the SeppPorts field value if set, zero value otherwise.
func (o *SeppInfo) GetSeppPorts() map[string]int32 {
	if o == nil || o.SeppPorts == nil {
		var ret map[string]int32
		return ret
	}
	return *o.SeppPorts
}

// GetSeppPortsOk returns a tuple with the SeppPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeppInfo) GetSeppPortsOk() (*map[string]int32, bool) {
	if o == nil || o.SeppPorts == nil {
		return nil, false
	}
	return o.SeppPorts, true
}

// HasSeppPorts returns a boolean if a field has been set.
func (o *SeppInfo) HasSeppPorts() bool {
	if o != nil && o.SeppPorts != nil {
		return true
	}

	return false
}

// SetSeppPorts gets a reference to the given map[string]int32 and assigns it to the SeppPorts field.
func (o *SeppInfo) SetSeppPorts(v map[string]int32) {
	o.SeppPorts = &v
}

// GetRemotePlmnList returns the RemotePlmnList field value if set, zero value otherwise.
func (o *SeppInfo) GetRemotePlmnList() []PlmnId {
	if o == nil || o.RemotePlmnList == nil {
		var ret []PlmnId
		return ret
	}
	return *o.RemotePlmnList
}

// GetRemotePlmnListOk returns a tuple with the RemotePlmnList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeppInfo) GetRemotePlmnListOk() (*[]PlmnId, bool) {
	if o == nil || o.RemotePlmnList == nil {
		return nil, false
	}
	return o.RemotePlmnList, true
}

// HasRemotePlmnList returns a boolean if a field has been set.
func (o *SeppInfo) HasRemotePlmnList() bool {
	if o != nil && o.RemotePlmnList != nil {
		return true
	}

	return false
}

// SetRemotePlmnList gets a reference to the given []PlmnId and assigns it to the RemotePlmnList field.
func (o *SeppInfo) SetRemotePlmnList(v []PlmnId) {
	o.RemotePlmnList = &v
}

func (o SeppInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SeppPorts != nil {
		toSerialize["seppPorts"] = o.SeppPorts
	}
	if o.RemotePlmnList != nil {
		toSerialize["remotePlmnList"] = o.RemotePlmnList
	}
	return json.Marshal(toSerialize)
}

type NullableSeppInfo struct {
	value *SeppInfo
	isSet bool
}

func (v NullableSeppInfo) Get() *SeppInfo {
	return v.value
}

func (v *NullableSeppInfo) Set(val *SeppInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSeppInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSeppInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeppInfo(val *SeppInfo) *NullableSeppInfo {
	return &NullableSeppInfo{value: val, isSet: true}
}

func (v NullableSeppInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeppInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


