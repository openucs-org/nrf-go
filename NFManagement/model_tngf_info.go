/*
NRF NFManagement Service

NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.2.0-alpha.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TngfInfo Infomation of the TNGF endpoints
type TngfInfo struct {
	Ipv4EndpointAddresses *[]string `json:"ipv4EndpointAddresses,omitempty"`
	Ipv6EndpointAddresses *[]Ipv6Addr `json:"ipv6EndpointAddresses,omitempty"`
	// Fully Qualified Domain Name
	EndpointFqdn *string `json:"endpointFqdn,omitempty"`
}

// NewTngfInfo instantiates a new TngfInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTngfInfo() *TngfInfo {
	this := TngfInfo{}
	return &this
}

// NewTngfInfoWithDefaults instantiates a new TngfInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTngfInfoWithDefaults() *TngfInfo {
	this := TngfInfo{}
	return &this
}

// GetIpv4EndpointAddresses returns the Ipv4EndpointAddresses field value if set, zero value otherwise.
func (o *TngfInfo) GetIpv4EndpointAddresses() []string {
	if o == nil || o.Ipv4EndpointAddresses == nil {
		var ret []string
		return ret
	}
	return *o.Ipv4EndpointAddresses
}

// GetIpv4EndpointAddressesOk returns a tuple with the Ipv4EndpointAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TngfInfo) GetIpv4EndpointAddressesOk() (*[]string, bool) {
	if o == nil || o.Ipv4EndpointAddresses == nil {
		return nil, false
	}
	return o.Ipv4EndpointAddresses, true
}

// HasIpv4EndpointAddresses returns a boolean if a field has been set.
func (o *TngfInfo) HasIpv4EndpointAddresses() bool {
	if o != nil && o.Ipv4EndpointAddresses != nil {
		return true
	}

	return false
}

// SetIpv4EndpointAddresses gets a reference to the given []string and assigns it to the Ipv4EndpointAddresses field.
func (o *TngfInfo) SetIpv4EndpointAddresses(v []string) {
	o.Ipv4EndpointAddresses = &v
}

// GetIpv6EndpointAddresses returns the Ipv6EndpointAddresses field value if set, zero value otherwise.
func (o *TngfInfo) GetIpv6EndpointAddresses() []Ipv6Addr {
	if o == nil || o.Ipv6EndpointAddresses == nil {
		var ret []Ipv6Addr
		return ret
	}
	return *o.Ipv6EndpointAddresses
}

// GetIpv6EndpointAddressesOk returns a tuple with the Ipv6EndpointAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TngfInfo) GetIpv6EndpointAddressesOk() (*[]Ipv6Addr, bool) {
	if o == nil || o.Ipv6EndpointAddresses == nil {
		return nil, false
	}
	return o.Ipv6EndpointAddresses, true
}

// HasIpv6EndpointAddresses returns a boolean if a field has been set.
func (o *TngfInfo) HasIpv6EndpointAddresses() bool {
	if o != nil && o.Ipv6EndpointAddresses != nil {
		return true
	}

	return false
}

// SetIpv6EndpointAddresses gets a reference to the given []Ipv6Addr and assigns it to the Ipv6EndpointAddresses field.
func (o *TngfInfo) SetIpv6EndpointAddresses(v []Ipv6Addr) {
	o.Ipv6EndpointAddresses = &v
}

// GetEndpointFqdn returns the EndpointFqdn field value if set, zero value otherwise.
func (o *TngfInfo) GetEndpointFqdn() string {
	if o == nil || o.EndpointFqdn == nil {
		var ret string
		return ret
	}
	return *o.EndpointFqdn
}

// GetEndpointFqdnOk returns a tuple with the EndpointFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TngfInfo) GetEndpointFqdnOk() (*string, bool) {
	if o == nil || o.EndpointFqdn == nil {
		return nil, false
	}
	return o.EndpointFqdn, true
}

// HasEndpointFqdn returns a boolean if a field has been set.
func (o *TngfInfo) HasEndpointFqdn() bool {
	if o != nil && o.EndpointFqdn != nil {
		return true
	}

	return false
}

// SetEndpointFqdn gets a reference to the given string and assigns it to the EndpointFqdn field.
func (o *TngfInfo) SetEndpointFqdn(v string) {
	o.EndpointFqdn = &v
}

func (o TngfInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ipv4EndpointAddresses != nil {
		toSerialize["ipv4EndpointAddresses"] = o.Ipv4EndpointAddresses
	}
	if o.Ipv6EndpointAddresses != nil {
		toSerialize["ipv6EndpointAddresses"] = o.Ipv6EndpointAddresses
	}
	if o.EndpointFqdn != nil {
		toSerialize["endpointFqdn"] = o.EndpointFqdn
	}
	return json.Marshal(toSerialize)
}

type NullableTngfInfo struct {
	value *TngfInfo
	isSet bool
}

func (v NullableTngfInfo) Get() *TngfInfo {
	return v.value
}

func (v *NullableTngfInfo) Set(val *TngfInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTngfInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTngfInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTngfInfo(val *TngfInfo) *NullableTngfInfo {
	return &NullableTngfInfo{value: val, isSet: true}
}

func (v NullableTngfInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTngfInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


