/*
NRF NFManagement Service

NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.2.0-alpha.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DnnMbSmfInfoItem Parameters supported by an MB-SMF for a given DNN
type DnnMbSmfInfoItem struct {
	Dnn AnyOfstringstring `json:"dnn"`
}

// NewDnnMbSmfInfoItem instantiates a new DnnMbSmfInfoItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnnMbSmfInfoItem(dnn AnyOfstringstring) *DnnMbSmfInfoItem {
	this := DnnMbSmfInfoItem{}
	this.Dnn = dnn
	return &this
}

// NewDnnMbSmfInfoItemWithDefaults instantiates a new DnnMbSmfInfoItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnnMbSmfInfoItemWithDefaults() *DnnMbSmfInfoItem {
	this := DnnMbSmfInfoItem{}
	return &this
}

// GetDnn returns the Dnn field value
func (o *DnnMbSmfInfoItem) GetDnn() AnyOfstringstring {
	if o == nil {
		var ret AnyOfstringstring
		return ret
	}

	return o.Dnn
}

// GetDnnOk returns a tuple with the Dnn field value
// and a boolean to check if the value has been set.
func (o *DnnMbSmfInfoItem) GetDnnOk() (*AnyOfstringstring, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Dnn, true
}

// SetDnn sets field value
func (o *DnnMbSmfInfoItem) SetDnn(v AnyOfstringstring) {
	o.Dnn = v
}

func (o DnnMbSmfInfoItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dnn"] = o.Dnn
	}
	return json.Marshal(toSerialize)
}

type NullableDnnMbSmfInfoItem struct {
	value *DnnMbSmfInfoItem
	isSet bool
}

func (v NullableDnnMbSmfInfoItem) Get() *DnnMbSmfInfoItem {
	return v.value
}

func (v *NullableDnnMbSmfInfoItem) Set(val *DnnMbSmfInfoItem) {
	v.value = val
	v.isSet = true
}

func (v NullableDnnMbSmfInfoItem) IsSet() bool {
	return v.isSet
}

func (v *NullableDnnMbSmfInfoItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnnMbSmfInfoItem(val *DnnMbSmfInfoItem) *NullableDnnMbSmfInfoItem {
	return &NullableDnnMbSmfInfoItem{value: val, isSet: true}
}

func (v NullableDnnMbSmfInfoItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnnMbSmfInfoItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


