/*
NRF Bootstrapping

NRF Bootstrapping. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.1.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BootstrappingInfo Information returned by NRF in the bootstrapping response message
type BootstrappingInfo struct {
	Status *Status `json:"status,omitempty"`
	// Map of link objects where the keys are the link relations defined in 3GPP TS 29.510 clause 6.4.6.3.3
	Links map[string]LinksValueSchema `json:"_links"`
	// Map of features supported by the NRF, where the keys are the NRF services as defined in 3GPP TS 29.510 clause 6.1.6.3.11
	NrfFeatures *map[string]string `json:"nrfFeatures,omitempty"`
}

// NewBootstrappingInfo instantiates a new BootstrappingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBootstrappingInfo(links map[string]LinksValueSchema) *BootstrappingInfo {
	this := BootstrappingInfo{}
	this.Links = links
	return &this
}

// NewBootstrappingInfoWithDefaults instantiates a new BootstrappingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBootstrappingInfoWithDefaults() *BootstrappingInfo {
	this := BootstrappingInfo{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BootstrappingInfo) GetStatus() Status {
	if o == nil || o.Status == nil {
		var ret Status
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BootstrappingInfo) GetStatusOk() (*Status, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BootstrappingInfo) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given Status and assigns it to the Status field.
func (o *BootstrappingInfo) SetStatus(v Status) {
	o.Status = &v
}

// GetLinks returns the Links field value
func (o *BootstrappingInfo) GetLinks() map[string]LinksValueSchema {
	if o == nil {
		var ret map[string]LinksValueSchema
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *BootstrappingInfo) GetLinksOk() (*map[string]LinksValueSchema, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *BootstrappingInfo) SetLinks(v map[string]LinksValueSchema) {
	o.Links = v
}

// GetNrfFeatures returns the NrfFeatures field value if set, zero value otherwise.
func (o *BootstrappingInfo) GetNrfFeatures() map[string]string {
	if o == nil || o.NrfFeatures == nil {
		var ret map[string]string
		return ret
	}
	return *o.NrfFeatures
}

// GetNrfFeaturesOk returns a tuple with the NrfFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BootstrappingInfo) GetNrfFeaturesOk() (*map[string]string, bool) {
	if o == nil || o.NrfFeatures == nil {
		return nil, false
	}
	return o.NrfFeatures, true
}

// HasNrfFeatures returns a boolean if a field has been set.
func (o *BootstrappingInfo) HasNrfFeatures() bool {
	if o != nil && o.NrfFeatures != nil {
		return true
	}

	return false
}

// SetNrfFeatures gets a reference to the given map[string]string and assigns it to the NrfFeatures field.
func (o *BootstrappingInfo) SetNrfFeatures(v map[string]string) {
	o.NrfFeatures = &v
}

func (o BootstrappingInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["_links"] = o.Links
	}
	if o.NrfFeatures != nil {
		toSerialize["nrfFeatures"] = o.NrfFeatures
	}
	return json.Marshal(toSerialize)
}

type NullableBootstrappingInfo struct {
	value *BootstrappingInfo
	isSet bool
}

func (v NullableBootstrappingInfo) Get() *BootstrappingInfo {
	return v.value
}

func (v *NullableBootstrappingInfo) Set(val *BootstrappingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBootstrappingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBootstrappingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBootstrappingInfo(val *BootstrappingInfo) *NullableBootstrappingInfo {
	return &NullableBootstrappingInfo{value: val, isSet: true}
}

func (v NullableBootstrappingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBootstrappingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


